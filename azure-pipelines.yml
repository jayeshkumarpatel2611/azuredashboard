
variables:
  location: 'east us'
  AppInsights: 'poh-4-f8c75af9-d48f-4600-9db9-00d1325b865a-client1-dev-ai'
  subscriptionid: '2daf7420-f7f4-4e0f-8a65-8dd8f147545b'
  environmentname: 'dev'
  clientname: 'client1'
  resourcegroupname: 'POH'
  idntenantid: 'f8c75af9-d48f-4600-9db9-00d1325b865a'
  envcode: '4'
  serviceconn_name: 'AzureConnection'
  tfresourcegroupname: 'POH'
  tfstorageaccountname: 'tfstorageac15'
  azureRmContainerName: 'container'
  tfstatefile: 'terraform.tfstate'

stages:
  - stage: 
    displayName: "Preparing terraform.tfvars"
    
    jobs:
      - job:     
        steps:
          - task: replacetokens@5
            displayName: 'Replace tokens in terraform files **/*.tfvars'
            inputs:
              targetFiles: '$(Build.SourcesDirectory)/*.tfvars'
              escapeType: none
              tokenPrefix: '__'
              tokenSuffix: '__'

  - stage: 
    displayName: "Deploying Terraform Resources"
    
    jobs:
      - job:
        steps:
          - task: TerraformCLI@0
            displayName: "terraform init"
            enabled: true
            inputs:
              command: "init"
              backendServiceArm: $(serviceconn_name)
              backendType: "azurerm"
              backendAzureRmResourceGroupName: $(tfresourcegroupname)
              backendAzureRmStorageAccountName: $(tfstorageaccountname)
              backendAzureRmContainerName: $(azureRmContainerName)
              backendAzureRmKey: $(tfstatefile)
              allowTelemetryCollection: true
              workingDirectory: $(Build.SourcesDirectory)

          - task: TerraformCLI@0
            displayName: "terraform plan"
            enabled: true
            inputs:
              command: 'plan'
              workingDirectory: $(Build.SourcesDirectory)
              environmentServiceName: $(serviceconn_name)
              commandOptions: '-out=tfplan'
              allowTelemetryCollection: true
                      
          - task: TerraformCLI@0
            displayName: "terraform apply"
            enabled: true  
            inputs:
              command: 'apply'
              workingDirectory: $(Build.SourcesDirectory)
              environmentServiceName: $(serviceconn_name)
              commandOptions: 'tfplan'
              allowTelemetryCollection: true
            condition: and(succeeded(), eq(variables['TerraformApply'], 'True'))

          - task: TerraformCLI@0
            displayName: "terraform destroy"
            enabled: true
            inputs:
              command: 'destroy'
              workingDirectory: $(Build.SourcesDirectory)
              environmentServiceName: $(serviceconn_name)
              allowTelemetryCollection: true
            condition: and(succeeded(), eq(variables['TerraformDestroy'], 'True'))