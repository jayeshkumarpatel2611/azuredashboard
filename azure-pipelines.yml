trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  location: 'eastus'
  AppInsights: 'poh-4-f8c75af9-d48f-4600-9db9-00d1325b865a-client1-dev-ai'
  subscription_id: '2daf7420-f7f4-4e0f-8a65-8dd8f147545b'
  environment_name: 'dev'
  client_name: 'client1'
  resource_group_name: 'POH'
  idn_tenant_id: 'f8c75af9-d48f-4600-9db9-00d1325b865a'
  env_code: '4'
  serviceconn_name: 'AzureConnection'
  backend_resource_group: 'POH'
  backend_storage_account: 'tfstorageac15'
  backend_container_name: 'terraform'
  backend_tfstate_file_name: 'terraform.tfstate'

stages:
  - stage: 
    displayName: "Preparing terraform.tfvars"
    
    jobs:
      - job: preparing_terraform_tfvars
        timeoutInMinutes: 180    
        steps:
          - task: replacetokens@5
            displayName: 'Replace tokens in terraform files $(System.DefaultWorkingDirectory)/*.tfvars'
            inputs:
              targetFiles: | 
                '$(System.DefaultWorkingDirectory)/main.tf'
                '$(System.DefaultWorkingDirectory)/terraform.tfvars'
              escapeType: none
              encoding: auto
              keepToken: false
              actionOnMissing: 'warn'
              tokenPrefix: '~{'
              tokenSuffix: '}~'
              verbosity: detailed

  - stage: 
    displayName: "Deploying Terraform Resources"
    
    jobs:
      - job: terraform_provisioning
        timeoutInMinutes: 180
        steps:
          - task: TerraformCLI@0
            displayName: "terraform init"
            enabled: true
            inputs:
              command: "init"
              backendServiceArm: $(serviceconn_name)
              backendType: "azurerm"
              backendAzureRmResourceGroupName: $(backend_resource_group)
              backendAzureRmStorageAccountName: $(backend_storage_account)
              backendAzureRmContainerName: $(backend_container_name)
              backendAzureRmKey: $(backend_tfstate_file_name)
              allowTelemetryCollection: true
              workingDirectory: $(System.DefaultWorkingDirectory)

          - task: TerraformCLI@0
            displayName: "terraform plan"
            enabled: true
            inputs:
              command: 'plan'
              workingDirectory: $(System.DefaultWorkingDirectory)
              environmentServiceName: $(serviceconn_name)
              commandOptions: '--out=$(System.DefaultWorkingDirectory)/plan.tfplan'
              allowTelemetryCollection: true
                      
          - task: TerraformCLI@0
            displayName: "terraform apply"
            enabled: true  
            inputs:
              command: 'apply'
              workingDirectory: $(System.DefaultWorkingDirectory)
              environmentServiceName: $(serviceconn_name)
              commandOptions: 'tfplan'
              allowTelemetryCollection: true
            condition: and(succeeded(), eq(variables['TerraformApply'], 'True'))

          - task: TerraformCLI@0
            displayName: "terraform destroy"
            enabled: true
            inputs:
              command: 'destroy'
              workingDirectory: $(System.DefaultWorkingDirectory)
              environmentServiceName: $(serviceconn_name)
              allowTelemetryCollection: true
            condition: and(succeeded(), eq(variables['TerraformDestroy'], 'True'))